#!/bin/bash

PASSWORD=""
FILENAME=""
CONFIG=""

# Argument parsing
while getopts ":p:f:c:" opt; do
  case $opt in
    p)
      PASSWORD="$OPTARG"
      ;;
    f)
      FILENAME="$OPTARG"
      ;;
    c)
      CONFIG="$OPTARG"
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done

# Check if hummingbot submodule is initialized
if [ ! -d "hummingbot-upstream/hummingbot" ]; then
    echo "‚ùå Error: Hummingbot submodule not initialized!"
    echo "   Please run './install.sh' first to set up the project"
    exit 1
fi

# Create symbolic link if it doesn't exist
if [ ! -L "hummingbot" ]; then
    ln -s hummingbot-upstream/hummingbot hummingbot
fi

# Check if bin/hummingbot_quickstart.py exists in the submodule
if [[ ! -f hummingbot-upstream/bin/hummingbot_quickstart.py ]]; then
    echo "Error: bin/hummingbot_quickstart.py command not found in Hummingbot submodule"
    exit 1
fi

# Set the Python path to include all necessary directories
export PYTHONPATH=".:./hummingbot-upstream:./strategies:./adapters:./services:${PYTHONPATH}"

# Build the command to run - use the submodule's quickstart script
CMD="./hummingbot-upstream/bin/hummingbot_quickstart.py"
if [[ ! -z "$PASSWORD" ]]; then
    CMD="$CMD -p \"$PASSWORD\""
fi

# Check for valid file extensions
if [[ ! -z "$FILENAME" ]]; then
    if [[ $FILENAME == *.yml || $FILENAME == *.py ]]; then
        # If it's a strategy file, look in our strategies directory first
        if [[ $FILENAME == *.py ]] && [[ -f "strategies/funding_arbitrage/$FILENAME" ]]; then
            CMD="$CMD -f \"strategies/funding_arbitrage/$FILENAME\""
        elif [[ -f "scripts/$FILENAME" ]]; then
            CMD="$CMD -f \"scripts/$FILENAME\""
        else
            CMD="$CMD -f \"$FILENAME\""
        fi
    else
        echo "Error: Invalid strategy or script file. File must be a .yml or .py file."
        exit 4
    fi
fi

if [[ ! -z "$CONFIG" ]]; then
    if [[ $CONFIG == *.yml ]]; then
        CMD="$CMD -c \"$CONFIG\""
    else
        echo "Error: Config file must be a .yml file."
        exit 3
    fi
fi

echo "üöÄ Starting Funding Arbitrage Bot with modular architecture..."
echo "üì¶ Using Hummingbot from: ./hummingbot-upstream/"

# Execute the command
eval $CMD